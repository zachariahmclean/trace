[{"path":"https://zachariahmclean.github.io/trace/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 trace authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zachariahmclean.github.io/trace/articles/plotting_traces.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"Plotting traces","text":"lets first generate example data cloning example data comes package.","code":"fsa_list <- lapply(cell_line_fsa_list, function(x) x$clone()) find_ladders(   fsa_list,   show_progress_bar = FALSE ) fragments_list <- find_fragments(   fsa_list,   min_bp_size = 300 ) add_metadata(   fragments_list = fragments_list,   metadata_data.frame = metadata,   unique_id = \"unique_id\",   metrics_group_id = \"metrics_group_id\",   metrics_baseline_control = \"metrics_baseline_control\",   batch_run_id = \"batch_run_id\",   batch_sample_id = \"batch_sample_id\" ) find_alleles(   fragments_list = fragments_list )   call_repeats(   fragments_list = fragments_list )"},{"path":"https://zachariahmclean.github.io/trace/articles/plotting_traces.html","id":"plotting-a-trace","dir":"Articles","previous_headings":"","what":"plotting a trace","title":"Plotting traces","text":"functions built package plotting traces  convenient quickly visualizing traces, since ’s built using base r plotting, ’s user friendly difficult customize. can easily replicate ggplot2 flexibility customization.","code":"plot_traces(fragments_list[1], xlim = c(100, 150), show_peaks = FALSE) extract_trace_table(fragments_list[1]) |>   filter(between(calculated_repeats, 100, 150)) |>   ggplot(aes(calculated_repeats, signal)) +   geom_line()"},{"path":"https://zachariahmclean.github.io/trace/articles/plotting_traces.html","id":"extract-raw-traces","dir":"Articles","previous_headings":"","what":"Extract raw traces","title":"Plotting traces","text":"raw traces can extracted objects point call find_ladders(). However, extract traces call_repeats(), repeats called trace data . also incorporates batch correction (used call_repeats(batch_correction = TRUE)) allow comparison traces across different fragment analysis runs. Without batch correction, traces may comparable across fragment analysis runs -alignment several +- ~3 bp. quite large dataframe (550k rows) since contains scan (5961 per sample) samples example dataset. know exactly samples want plot, first subset repeats_list passing extract_trace_table. ’s just regular list, named unique id sample. can subsetted unique id names. example, lets pull couple unique ids metadata: long dataframe, meaning trace table sample bound rows. uniquely identified unique_id column dataframe. dataframe following columns:","code":"traces_df <- extract_trace_table(fragments_list) samples_for_plotting <- metadata[which(metadata$metrics_group_id == \"CC6\"), \"unique_id\"]  traces_for_plotting_df <- extract_trace_table(fragments_list[samples_for_plotting])"},{"path":"https://zachariahmclean.github.io/trace/articles/plotting_traces.html","id":"join-metadata","dir":"Articles","previous_headings":"","what":"Join metadata","title":"Plotting traces","text":"can join metadata table downstream plotting","code":"traces_for_plotting_with_metadata_df <- dplyr::left_join(   traces_for_plotting_df,   metadata,   by = join_by(unique_id) )"},{"path":"https://zachariahmclean.github.io/trace/articles/plotting_traces.html","id":"plot-the-traces","dir":"Articles","previous_headings":"","what":"Plot the traces","title":"Plotting traces","text":"can now plot traces whatever way like. ’ll show example using ggplot2. explain choices : ’ll use dplyr::filter()zoom area interest geom_line needs aes(group = unique_id) make sure sample’s traces plotted separately  plot plotting traces within group top . shows us replicate samples reproducible basically top . One issue height signal sample varies. can solve calculating relative signal value. means also need filter sample failed PCR (low signal). help , lets also extract allele information pull id sample exclude.  can also use tricks overlay traces top reference trace. key things plot: selecting single sample treatment (group_by + filter) make one sample common across facets, can use geom_line(data = _ ) dataset faceting column removed.","code":"traces_for_plotting_with_metadata_df |>   dplyr::filter(between(calculated_repeats, 100, 150)) |>   ggplot(aes(x = calculated_repeats,              y = signal,              colour = as.factor(treatment))) +   geom_line(aes(group = unique_id)) +   facet_wrap(vars(paste(\"Day\", day, treatment, \"nM Branaplam\")), ncol = 1) alleles_df <- extract_alleles(fragments_list[samples_for_plotting])  sample_to_exclude <- alleles_df[which(is.na(alleles_df$repeats)), \"unique_id\"]  traces_for_plotting_with_metadata_df <- traces_for_plotting_with_metadata_df |>   dplyr::filter(between(calculated_repeats, 100, 150),                 !unique_id %in% sample_to_exclude) |>   group_by(unique_id) |>   mutate(relative_signal = signal / max(signal),          day_treatment = paste(\"Day\", day, treatment, \"nM Branaplam\")) |>   ungroup()   traces_for_plotting_with_metadata_df |>   ggplot(aes(x = calculated_repeats,              relative_signal,              colour = as.factor(treatment))) +   geom_line(aes(group = unique_id)) +   facet_wrap(vars(day_treatment), ncol = 1) d0_trace <- traces_for_plotting_with_metadata_df |>   filter(day == 0) |>   filter(unique_id == unique(unique_id)[1]) |>   select(-day_treatment)  traces_for_plotting_with_metadata_df |>   group_by(day, treatment) |>   filter(unique_id == unique(unique_id)[1]) |>   ggplot(aes(x = calculated_repeats,              y = relative_signal,              colour = paste(\"Day\", day, treatment, \"nM Branaplam\"))) +   geom_line(data = d0_trace ,             aes(group = unique_id),             colour = \"gray40\") +   geom_line(aes(group = unique_id)) +   facet_wrap(vars(day_treatment), ncol = 1) +   labs(colour = \"\") +   theme_minimal()"},{"path":"https://zachariahmclean.github.io/trace/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zachariah McLean. Author, maintainer, copyright holder. Kevin Correia. Author.","code":""},{"path":"https://zachariahmclean.github.io/trace/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McLean, L Z, Gao, Dadi, Correia, Kevin, Roy, CL J, Shibata, Shota, Farnum, N , Valdepenas-Mellor, Zoe, Kovalenko, Marina, Rapuru, Manasa, Morini, Elisabetta, others (2024). “Splice modulators target PMS1 reduce somatic expansion Huntington’s disease-associated CAG repeat.” Nature Communications, 15(1), 3184. doi:10.1038/s41467-024-47485-0.","code":"@Article{,   title = {Splice modulators target PMS1 to reduce somatic expansion of the Huntington’s disease-associated CAG repeat},   author = {{McLean} and Zachariah L and {Gao} and {Dadi} and {Correia} and {Kevin} and {Roy} and Jennie CL and {Shibata} and {Shota} and {Farnum} and Iris N and {Valdepenas-Mellor} and {Zoe} and {Kovalenko} and {Marina} and {Rapuru} and {Manasa} and {Morini} and {Elisabetta} and others},   journal = {Nature Communications},   year = {2024},   volume = {15},   number = {1},   pages = {3184},   doi = {https://doi.org/10.1038/s41467-024-47485-0}, }"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"tandem-repeat-analysis-from-capillary-electrophoresis-trace","dir":"","previous_headings":"","what":"Tandem Repeat Analysis by Capillary Electrophoresis","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"package provides pipeline short tandem repeat instability analysis fragment analysis data. inputs fsa files peak tables (eg Genemapper 5 software output), user supplied metadata data-frame. functions identify ladders, calls peaks, calculate repeat instability metrics (ie expansion index average repeat gain). code intended function genotyping tool current form. repeat lengths generated precise, accurate. conversion bp size repeat length underestimates actual repeat length amplicons containing repeats run linearly internal size standard ladder. However, calculating instability metrics, inaccuracy inconsequential since metrics relative measures. report bugs feature requests, please visit Github issue tracker . assistance inquires, contact Zach McLean. use package, please cite paper now.","code":""},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"how-to-use-the-package","dir":"","previous_headings":"","what":"How to use the package","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"easy way get started data run example, use trace::generate_trace_template() generate document pipeline pre-populated. package, sample represented R6 ‘fragments’ object, organized lists. Functions package iterate lists, usually don’t need interact objects directly. , attributes objects can accessed $, note functions modify objects place, re-assignment isn’t necessary. exception find_fragments, transitions new object since class structure changes. several important factors successful repeat instability experiment things consider using package: (required) sample unique id, usually file name (optional) Baseline control experiment. example, specifying sample modal allele inherited repeat length (eg mouse tail sample) sample start time-course experiment. indicated TRUE metrics_baseline_control column metadata. Samples grouped together metrics_group_id column metadata. Multiple samples can metrics_baseline_control, can helpful average repeat gain metric accurate representation average repeat start experiment. (optional) Using common sample(s) across fragment analysis runs correct systematic batch effects occur repeat-containing amplicons capillary electrophoresis. slight fluctuations size across runs amplicons containing repeats result systematic differences around 1-3 base pairs. , samples analyzed different runs, absolute bp size comparable unless batch effect corrected. relevant absolute size amplicons compared grouping metrics described (otherwise instability metrics relative doesn’t matter ’s systematic batch effects across runs) plotting traces different runs. correction can achieved running couple samples every fragment analysis run, single run takes couple samples every run together, thereby linking . samples indicated metadata batch_run_id (group samples fragment analysis run) batch_sample_id (enable linking samples across batches). starting fsa files, GeneScan™ 1200 LIZ™ dye Size Standard ladder assignment may work well. ladder identification algorithm optimized GeneScan™ 500 LIZ™ GeneScan™ 600 LIZ™ ladders relatively peaks. 1200 LIZ™ ladder challenging pattern ladder peaks automatically assign. However, ladders can fixed playing various parameters manually built-fix_ladders_interactive() app.","code":""},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"can install GitHub : load package:","code":"# install.packages(\"pak\") pak::pak(\"zachariahmclean/trace\") library(trace)"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"import-data","dir":"","previous_headings":"","what":"Import data","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"First, read raw data. case used example data within package, usually fsa files read using read_fsa(). example data also cloned since next step modifies object place.","code":"fsa_list <- lapply(cell_line_fsa_list, function(x) x$clone())"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"find-ladders","dir":"","previous_headings":"","what":"Find ladders","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"First find ladders call bp size fsa file. bp assigned using local Southern method. Basically, data point, linear models made lower upper 3 size standard predicted sizes averaged. visually inspect ladder make sure ladders correctly assigned  ladders assigned correctly, can adjust parameters manually using built-fix_ladders_interactive() app.","code":"find_ladders(   fsa_list,   show_progress_bar = FALSE ) plot_ladders(fsa_list[1])"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"find-fragments","dir":"","previous_headings":"","what":"Find fragments","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"fragment peaks identified raw continuous trace data. objects assigned find_fragments transitions new object since class structure changes. reflects data moving continuous trace peak table. Visually inspect traces called peaks make sure correctly assigned.  Alternatively, use data exported Genemapper rather use Genemapper bp sizing peak identification algorithms. However, recommended functionality package accessible (mainly call_repeats(), batch_correction repeat calling algorithms)","code":"fragments_list <- find_fragments(   fsa_list,   min_bp_size = 300 ) plot_traces(fragments_list[1],   xlim = c(400, 550),   ylim = c(0, 1200) ) fragments_list_genemapper <- peak_table_to_fragments(example_data,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 300 )"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"add-metadata","dir":"","previous_headings":"","what":"Add metadata","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"Metadata can incorporated allow additional functionality call_repeats() (correcting batch effects across fragment analysis runs) assign_index_peaks() (assigning index peak another sample). Prepare file (eg spreadsheet saved .csv) following columns. use specified column names, automatically parsed add_metadata(), otherwise need match column name belongs metadata category (done add_metadata()):","code":"add_metadata(   fragments_list = fragments_list,   metadata_data.frame = metadata,   unique_id = \"unique_id\",   metrics_group_id = \"metrics_group_id\",   metrics_baseline_control = \"metrics_baseline_control\",   batch_run_id = \"batch_run_id\",   batch_sample_id = \"batch_sample_id\" )"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"identify-modal-peaks-and-call-repeats","dir":"","previous_headings":"","what":"Identify modal peaks and call repeats","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"Next identify modal peaks find_alleles() convert base pair fragments repeats call_repeats(). can view distribution repeat sizes identified modal peak plotting function.","code":"find_alleles(fragments_list)  call_repeats(fragments_list) plot_traces(fragments_list[1], xlim = c(110, 150))"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"assign-index-peaks","dir":"","previous_headings":"","what":"Assign index peaks","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"key part several instability metrics index peak. repeat length used reference relative instability metrics calculations, like expansion index average repeat gain. metadata, samples grouped metrics_group_id subset samples set metrics_baseline_control, meaning samples taken day 0 experiment. allows us set grouped = TRUE set index peak expansion index metrics. mice, just samples inherited repeat height shorter expanded population, worry instead use index_override_dataframe assign_index_peaks(). can validate index peaks assigned correctly dotted vertical line added trace. perhaps useful context mice can visually see inherited repeat length bimodal distribution.","code":"assign_index_peaks(   fragments_list,   grouped = TRUE ) plot_traces(fragments_list[1], xlim = c(110, 150))"},{"path":"https://zachariahmclean.github.io/trace/index.html","id":"calculate-instability-metrics","dir":"","previous_headings":"","what":"Calculate instability metrics","title":"Tandem Repeat Analysis by Capillary Electrophoresis","text":"information need calculate repeat instability metrics now identified. can finally use calculate_instability_metrics generate dataframe per-sample metrics. metrics can used quantify repeat instability. example, reproduces Figure 7e manuscript. First, prepare data plotting removing poor quality samples finding average repeat gain relative DMSO group cell line can plot instability metrics","code":"metrics_grouped_df <- calculate_instability_metrics(   fragments_list = fragments_list,   peak_threshold = 0.05 ) library(dplyr)   plot_data <- metrics_grouped_df |>   dplyr::left_join(metadata, by = dplyr::join_by(unique_id)) |>   dplyr::filter(     day > 0,     modal_peak_height > 500   ) |>   dplyr::group_by(metrics_group_id) |>   dplyr::mutate(     rel_gain = average_repeat_gain / median(average_repeat_gain[which(treatment == 0)]),     genotype = forcats::fct_rev(genotype)   ) library(ggplot2)  ggplot(   plot_data,   aes(genotype, rel_gain, colour = genotype) ) +   geom_boxplot(outlier.shape = NA) +   geom_jitter() +   facet_wrap(vars(as.factor(treatment)), nrow = 1) +   labs(     y = \"Average repeat gain\\n(relative to DMSO)\",     x = \"PMS1 pseudoexon status\"   ) +   theme(legend.position = \"none\")"},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Metadata to Fragments List — add_metadata","title":"Add Metadata to Fragments List — add_metadata","text":"function adds metadata information list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Metadata to Fragments List — add_metadata","text":"","code":"add_metadata(   fragments_list,   metadata_data.frame,   unique_id = \"unique_id\",   metrics_group_id = \"metrics_group_id\",   metrics_baseline_control = \"metrics_baseline_control\",   batch_run_id = \"batch_run_id\",   batch_sample_id = \"batch_sample_id\" )"},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Metadata to Fragments List — add_metadata","text":"fragments_list list fragment objects metadata added. metadata_data.frame data frame containing metadata information. unique_id (required) character string indicating column name unique sample identifiers metadata. metrics_group_id (optional) character string indicating column name sample group identifiers metadata. skip, provide NA. metrics_baseline_control (optional) character string indicating column name baseline control indicators metadata. skip, provide NA. batch_run_id (optional) character string indicating column name plate identifiers metadata.  skip, provide NA. batch_sample_id (optional) character string indicating column name id size standard. example, sample code. can used correct batch effects across different fragment analysis runs. skip, provide NA.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Metadata to Fragments List — add_metadata","text":"function modifies list fragments objects place metadata added.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Metadata to Fragments List — add_metadata","text":"function adds specified metadata attributes fragment list. matches unique sample identifiers fragments list metadata data frame. skip optional columns, make parameter NA.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/add_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Metadata to Fragments List — add_metadata","text":"","code":"gm_raw <- trace::example_data metadata <- trace::metadata  test_fragments <- peak_table_to_fragments(gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 300 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  add_metadata(   fragments_list = test_fragments,   metadata_data.frame = metadata,   unique_id = \"unique_id\",   metrics_group_id = \"metrics_group_id\",   metrics_baseline_control = \"metrics_baseline_control\",   batch_run_id = \"batch_run_id\",   batch_sample_id = \"batch_sample_id\" )  # skip unwanted metadata by using NA  add_metadata(   fragments_list = test_fragments,   metadata_data.frame = metadata,   unique_id = \"unique_id\",   metrics_group_id = \"metrics_group_id\",   metrics_baseline_control = \"metrics_baseline_control\",   batch_run_id = NA,   batch_sample_id = NA )"},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign index peaks — assign_index_peaks","title":"Assign index peaks — assign_index_peaks","text":"Assign index peaks preparation calculation instability metrics","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign index peaks — assign_index_peaks","text":"","code":"assign_index_peaks(   fragments_list,   grouped = FALSE,   index_override_dataframe = NULL )"},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign index peaks — assign_index_peaks","text":"fragments_list list \"fragments_repeats\" class objects representing fragment data. grouped Logical value indicating whether samples grouped share common index peak. FALSE assign sample's modal allele index peak. TRUE use metadata assign index peak based modal peak another sample (see details). index_override_dataframe data.frame manually set index peaks. Column 1: unique sample IDs, Column 2: desired index peaks (order columns important since information pulled column position rather column name). Closest peak sample selected number needs just approximate.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign index peaks — assign_index_peaks","text":"function modifies list fragments_repeats objects place index_repeat index_height added.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign index peaks — assign_index_peaks","text":"key part instability metrics index peak. repeat length used reference peak relative instability metrics calculations, like expansion index. usually inherited repeat length mouse, modal repeat length cell line starting time point. grouped set TRUE, function groups samples metrics_group_id uses samples set metrics_baseline_control set index peak. Use add_metadata() set variables. useful cases like inferring repeat size inherited alleles mouse tail data. samples going used assign index peak different fragment analysis runs, use batch_correction call_repeats() make sure systematic differences runs corrected correct index peak assigned. multiple samples used baseline control, median value used assign index peak corresponding samples. mice, just samples inherited repeat height shorter expanded population, worry instead use index_override_dataframe. can used manually override assigned index repeat values (irrespective whether grouped TRUE FALSE). final option, index peak manually assigned directly fragments_repeats class using internal setter function fragments_repeats$set_index_peak().","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/assign_index_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign index peaks — assign_index_peaks","text":"","code":"fsa_list <- lapply(cell_line_fsa_list, function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  fragments_list <- find_fragments(fsa_list,   min_bp_size = 300 )  find_alleles(   fragments_list ) call_repeats(   fragments_list ) #> Warning: Repeats were not called in the following samples (no allele in sample): 20230413_A04.fsa, 20230413_B07.fsa, 20230413_D11.fsa  add_metadata(   fragments_list,   metadata_data.frame = trace::metadata )  assign_index_peaks(   fragments_list,   grouped = TRUE )  plot_traces(fragments_list[1], xlim = c(100,150))"},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Repeat Instability Metrics — calculate_instability_metrics","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"function computes instability metrics list fragments_repeats data objects.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"","code":"calculate_instability_metrics(   fragments_list,   peak_threshold = 0.05,   window_around_index_peak = c(NA, NA),   percentile_range = c(0.5, 0.75, 0.9, 0.95),   repeat_range = c(2, 5, 10, 20) )"},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"fragments_list list \"fragments_repeats\" objects representing fragment data. peak_threshold threshold peak heights considered calculations, relative modal peak height expanded allele. window_around_index_peak numeric vector (length = 2) defining range around index peak. First number specifies repeats index peak, second . example, c(-5, 40) around index peak 100 analyze repeats 95 140. sign numbers matter (absolute value found). percentile_range numeric vector percentiles compute (e.g., c(0.5, 0.75, 0.9, 0.95)). repeat_range numeric vector specifying ranges repeats inverse quantile computation.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"data.frame calculated instability metrics sample.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"columns supplied dataframe explained :","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"general-information","dir":"Reference","previous_headings":"","what":"General Information","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"unique_id: unique identifier sample (usually fsa file name).","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"quality-control","dir":"Reference","previous_headings":"","what":"Quality Control","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"QC_comments: Quality control comments. QC_modal_peak_height: Quality control status based modal peak height (Low < 500, low < 100). QC_peak_number: Quality control status based number peaks (Low < 20, low < 10). QC_off_scale: Quality control comments -scale peaks. Potential peaks -scale given. However, caveat channels (ie ladder channel scan given repeat).","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"general-sample-metrics","dir":"Reference","previous_headings":"","what":"General sample metrics","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"modal_peak_repeat: repeat size modal peak. modal_peak_height: height modal peak. index_peak_repeat: repeat size index peak (repeat value closest modal peak index sample). index_peak_height: height index peak. index_weighted_mean_repeat: weighted mean repeat size (weighted height peaks) index sample. n_peaks_total: total number peaks repeat table. n_peaks_analysis_subset: number peaks analysis subset. n_peaks_analysis_subset_expansions: number expansion peaks analysis subset. min_repeat: minimum repeat size analysis subset. max_repeat: maximum repeat size analysis subset. mean_repeat: mean repeat size analysis subset. weighted_mean_repeat: weighted mean repeat size (weight peak height) analysis subset. median_repeat: median repeat size analysis subset. max_height: maximum peak height analysis subset. max_delta_neg: maximum negative delta index peak. max_delta_pos: maximum positive delta index peak. skewness: skewness repeat size distribution. kurtosis: kurtosis repeat size distribution.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"repeat-instability-metrics","dir":"Reference","previous_headings":"","what":"Repeat instability metrics","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"modal_repeat_delta: delta modal peak repeat index peak repeat. average_repeat_gain: average repeat change: weighted mean sample (weighted peak height) subtracted weighted mean repeat index sample. instability_index: instability index based peak height distance index peak. (See Lee et al., 2010, https://doi.org/10.1186/1752-0509-4-29). instability_index_abs: absolute instability index. absolute value taken \"Change main allele\". expansion_index: instability index expansion peaks . contraction_index: instability index contraction peaks . expansion_ratio: ratio expansion peaks' heights main peak height. Also known \"peak proportional sum\" (https://doi.org/10.1016/j.cell.2019.06.036). contraction_ratio: ratio contraction peaks' heights main peak height. expansion_percentile_*: repeat size specified percentiles cumulative distribution expansion peaks. expansion_percentile_for_repeat_*: percentile rank specified repeat sizes distribution expansion peaks.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/calculate_instability_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Repeat Instability Metrics — calculate_instability_metrics","text":"","code":"gm_raw <- trace::example_data metadata <- trace::metadata  test_fragments <- peak_table_to_fragments(gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 400 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  add_metadata(   fragments_list = test_fragments,   metadata_data.frame = metadata )  find_alleles(   fragments_list = test_fragments,   peak_region_size_gap_threshold = 6,   peak_region_height_threshold_multiplier = 1 )   call_repeats(   fragments_list = test_fragments,   repeat_calling_algorithm = \"simple\",   assay_size_without_repeat = 87,   repeat_size = 3 ) #> Warning: Repeats were not called in the following samples (no allele in sample): 20230413_A04.fsa, 20230413_D11.fsa  assign_index_peaks(   fragments_list = test_fragments,   grouped = TRUE )   # grouped metrics # uses t=0 samples as indicated in metadata test_metrics_grouped <- calculate_instability_metrics(   fragments_list = test_fragments,   peak_threshold = 0.05,   window_around_index_peak = c(-40, 40),   percentile_range = c(0.5, 0.75, 0.9, 0.95),   repeat_range = c(2, 5, 10, 20) )"},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":null,"dir":"Reference","previous_headings":"","what":"Call Repeats for Fragments — call_repeats","title":"Call Repeats for Fragments — call_repeats","text":"function calls repeat lengths list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call Repeats for Fragments — call_repeats","text":"","code":"call_repeats(   fragments_list,   assay_size_without_repeat = 87,   repeat_size = 3,   force_whole_repeat_units = FALSE,   batch_correction = FALSE,   repeat_calling_algorithm = \"simple\",   repeat_calling_algorithm_size_window_around_allele = repeat_size * 5,   repeat_calling_algorithm_peak_assignment_scan_window = 3,   repeat_calling_algorithm_size_period = repeat_size * 0.93 )"},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call Repeats for Fragments — call_repeats","text":"fragments_list list fragments_repeats objects containing fragment data. assay_size_without_repeat integer specifying assay size without repeat repeat calling. length sequence flanking repeat PCR product. repeat_size integer specifying repeat size repeat calling. Default 3. force_whole_repeat_units logical value specifying peaks forced whole repeat units apart. Usually peaks slightly whole repeat unit left unchanged. batch_correction logical specifying size adjusted across fragment analysis runs. Requires metadata added specify samples (\"batch_sample_id\") common across runs (\"batch_run_id\")(see add_metadata()). repeat_calling_algorithm character specifying repeat calling algorithm. Options: \"simple\", \"fft\", \"size_period\" (see details section information ). repeat_calling_algorithm_size_window_around_allele numeric value big window around tallest peak used find peak periodicity. Used \"fft\" \"size_period\". \"fft\", want make sure window limited clear peaks. \"size_period\", make big difference. repeat_calling_algorithm_peak_assignment_scan_window numeric value scan window assigning peak. used \"fft\" \"size_period\". scan period determined, algorithm jumps predicted scan next peak. value opens window neighboring scans pick tallest . repeat_calling_algorithm_size_period numeric value \"size_period\" algorithm set peak periodicity bp size. key variable change \"size_period\". fragment analysis, peaks usually slightly actual repeat unit size.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call Repeats for Fragments — call_repeats","text":"function modifies list fragments objects place repeats added.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Call Repeats for Fragments — call_repeats","text":"Repeat lengths calculated bp size several different alternative algorithm options. force_whole_repeat_units option aims correct systematic underestimation fragment sizes occurs capillary electrophoresis. independent algorithms described can used conjunction. modifies repeat lengths way helps align peaks underlying repeat pattern, making repeat lengths whole units (rather ~0.9 repeats). calculated repeat lengths start main peak's repeat length increases increments specified repeat_size either direction. batch_correction involves using common sample(s) across fragment analysis runs correct systematic batch effects occur repeat-containing amplicons capillary electrophoresis. slight fluctuations size across runs amplicons containing repeats result systematic differences, samples analyzed different runs, absolute bp size comparable unless batch effect corrected. relevant absolute size amplicons compared grouping metrics described assign_index_peaks() add_metadata() (otherwise instability metrics relative doesn’t matter ’s systematic batch effects across runs). correction can achieved running couple samples every fragment analysis run, single run takes couple samples every run together, thereby linking . samples indicated metadata batch_run_id (group samples fragment analysis run) batch_sample_id (enable linking samples across batches). simple algorithm just repeat size calculated directly bp. fft size_period algorithms re-call peaks based empirically determined (fft) specified (size_period) periodicity peaks. main application algorithms solve issue contaminating peaks expected regular pattern peaks. fft approach applies fourier transform peak signal determine underlying periodicity signal. size_period similar simpler, instead automatically figuring periodicity, users specify periodicity (since usually know size distance repeat units). can use periodicity jump peaks.","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/call_repeats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call Repeats for Fragments — call_repeats","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[c(90:94)], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  fragments_list <- find_fragments(   fsa_list,   min_bp_size = 300 )  find_alleles(   fragments_list )  # Simple conversion from bp size to repeat size call_repeats(   fragments_list,   repeat_calling_algorithm = \"simple\",   assay_size_without_repeat = 87,   repeat_size = 3 )  plot_traces(fragments_list[1], xlim = c(120, 170))    # use different algorithms to call the repeats to ensure only periodic peaks are called  # fft to automatically find peak period call_repeats(   fragments_list,   repeat_calling_algorithm = \"fft\",   assay_size_without_repeat = 87,   repeat_size = 3 )  plot_traces(fragments_list[1], xlim = c(120, 170))   # size_period to manually supply the peak period call_repeats(   fragments_list,   repeat_calling_algorithm = \"size_period\",   repeat_calling_algorithm_size_period = 2.75,   assay_size_without_repeat = 87,   repeat_size = 3 )  plot_traces(fragments_list[1], xlim = c(120, 170))   # Use force_whole_repeat_units algorithm to make sure called # repeats are the exact number of bp apart  call_repeats(   fragments_list,   force_whole_repeat_units = TRUE,   assay_size_without_repeat = 87,   repeat_size = 3 )  plot_traces(fragments_list[1], xlim = c(120, 170))"},{"path":"https://zachariahmclean.github.io/trace/reference/cell_line_fsa_list.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of fsa files — cell_line_fsa_list","title":"A list of fsa files — cell_line_fsa_list","text":"list fsa files read R using trace::read_fsa() example data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/cell_line_fsa_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of fsa files — cell_line_fsa_list","text":"","code":"cell_line_fsa_list"},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/cell_line_fsa_list.html","id":"cell-line-fsa-list","dir":"Reference","previous_headings":"","what":"cell_line_fsa_list","title":"A list of fsa files — cell_line_fsa_list","text":"list 92 elements, one contents fsa file:","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/cell_line_fsa_list.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A list of fsa files — cell_line_fsa_list","text":"https://www.nature.com/articles/s41467-024-47485-0","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"example_data — example_data","title":"example_data — example_data","text":"example_data genemapper output peak table","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example_data — example_data","text":"","code":"example_data"},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/example_data.html","id":"example-data","dir":"Reference","previous_headings":"","what":"example_data","title":"example_data — example_data","text":"genemapper output dataframe","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example_data — example_data","text":"https://www.nature.com/articles/s41467-024-47485-0","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_genemapper_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"example_data_genemapper_alleles — example_data_genemapper_alleles","title":"example_data_genemapper_alleles — example_data_genemapper_alleles","text":"example_data_genemapper_alleles genemapper output peak table genemapper alleles called","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_genemapper_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example_data_genemapper_alleles — example_data_genemapper_alleles","text":"","code":"example_data_genemapper_alleles"},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_genemapper_alleles.html","id":"example-data-genemapper-alleles","dir":"Reference","previous_headings":"","what":"example_data_genemapper_alleles","title":"example_data_genemapper_alleles — example_data_genemapper_alleles","text":"genemapper output dataframe","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_genemapper_alleles.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example_data_genemapper_alleles — example_data_genemapper_alleles","text":"https://www.nature.com/articles/s41467-024-47485-0","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_repeat_table.html","id":null,"dir":"Reference","previous_headings":"","what":"example_data_repeat_table — example_data_repeat_table","title":"example_data_repeat_table — example_data_repeat_table","text":"example_data_repeat_table data repeats called","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_repeat_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example_data_repeat_table — example_data_repeat_table","text":"","code":"example_data_repeat_table"},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_repeat_table.html","id":"example-data-repeat-table","dir":"Reference","previous_headings":"","what":"example_data_repeat_table","title":"example_data_repeat_table — example_data_repeat_table","text":"genemapper output dataframe","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/example_data_repeat_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"example_data_repeat_table — example_data_repeat_table","text":"https://www.nature.com/articles/s41467-024-47485-0","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Modal Peaks — extract_alleles","title":"Extract Modal Peaks — extract_alleles","text":"Extracts modal peak information sample list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Modal Peaks — extract_alleles","text":"","code":"extract_alleles(fragments_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Modal Peaks — extract_alleles","text":"fragments_list list fragments_repeats objects containing fragment data.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Modal Peaks — extract_alleles","text":"dataframe containing modal peak information sample","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_alleles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Modal Peaks — extract_alleles","text":"","code":"gm_raw <- trace::example_data  test_fragments <- peak_table_to_fragments(gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 400 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  find_alleles(   fragments_list = test_fragments,   peak_region_size_gap_threshold = 6,   peak_region_height_threshold_multiplier = 1 )  extract_alleles(test_fragments) #>                                   unique_id   size repeats height #> 20230413_A01.fsa           20230413_A01.fsa 465.82      NA   1051 #> 20230413_A02.fsa           20230413_A02.fsa 463.36      NA   1096 #> 20230413_A03.fsa           20230413_A03.fsa 466.15      NA   1210 #> 20230413_A04.fsa           20230413_A04.fsa     NA      NA     NA #> 20230413_A05.fsa           20230413_A05.fsa 485.98      NA    797 #> 20230413_A06.fsa           20230413_A06.fsa 502.08      NA    959 #> 20230413_A07.fsa           20230413_A07.fsa 480.54      NA   1240 #> 20230413_A08.fsa           20230413_A08.fsa 480.54      NA   1230 #> 20230413_A09.fsa           20230413_A09.fsa 486.32      NA   1284 #> 20230413_A10.fsa           20230413_A10.fsa 505.21      NA   1594 #> 20230413_A11.fsa           20230413_A11.fsa 504.69      NA   1554 #> 20230413_A12.fsa           20230413_A12.fsa 504.29      NA   1272 #> 20230413_B01.fsa           20230413_B01.fsa 563.96      NA    537 #> 20230413_B02.fsa           20230413_B02.fsa 560.83      NA   1031 #> 20230413_B03.fsa           20230413_B03.fsa 561.04      NA    695 #> 20230413_B04.fsa           20230413_B04.fsa 549.17      NA    871 #> 20230413_B05.fsa           20230413_B05.fsa 548.96      NA    913 #> 20230413_B06.fsa           20230413_B06.fsa 543.13      NA    722 #> 20230413_B07.fsa           20230413_B07.fsa 472.28      NA     38 #> 20230413_B08.fsa           20230413_B08.fsa 461.33      NA    665 #> 20230413_B09.fsa           20230413_B09.fsa 463.92      NA    762 #> 20230413_B10.fsa           20230413_B10.fsa 492.43      NA    961 #> 20230413_B11.fsa           20230413_B11.fsa 491.98      NA    879 #> 20230413_B12.fsa           20230413_B12.fsa 482.52      NA   1355 #> 20230413_C01.fsa           20230413_C01.fsa 482.43      NA   1068 #> 20230413_C02.fsa           20230413_C02.fsa 480.10      NA   1164 #> 20230413_C03.fsa           20230413_C03.fsa 480.30      NA   1083 #> 20230413_C04.fsa           20230413_C04.fsa 508.75      NA   1094 #> 20230413_C05.fsa           20230413_C05.fsa 508.54      NA   1123 #> 20230413_C06.fsa           20230413_C06.fsa 509.15      NA   1402 #> 20230413_C07.fsa           20230413_C07.fsa 569.58      NA    718 #> 20230413_C08.fsa           20230413_C08.fsa 569.80      NA    836 #> 20230413_C09.fsa           20230413_C09.fsa 567.50      NA    790 #> 20230413_C10.fsa           20230413_C10.fsa 548.98      NA    835 #> 20230413_C11.fsa           20230413_C11.fsa 546.12      NA    751 #> 20230413_C12.fsa           20230413_C12.fsa 552.04      NA    845 #> 20230413_D01.fsa           20230413_D01.fsa 462.90      NA   1466 #> 20230413_D02.fsa           20230413_D02.fsa 460.65      NA   1375 #> 20230413_D03.fsa           20230413_D03.fsa 460.94      NA   1562 #> 20230413_D04.fsa           20230413_D04.fsa 483.21      NA    676 #> 20230413_D05.fsa           20230413_D05.fsa 480.48      NA    469 #> 20230413_D06.fsa           20230413_D06.fsa 486.52      NA    457 #> 20230413_D07.fsa           20230413_D07.fsa 478.16      NA   1361 #> 20230413_D08.fsa           20230413_D08.fsa 475.33      NA   1382 #> 20230413_D09.fsa           20230413_D09.fsa 475.37      NA   1123 #> 20230413_D10.fsa           20230413_D10.fsa 512.29      NA    692 #> 20230413_D11.fsa           20230413_D11.fsa     NA      NA     NA #> 20230413_D12.fsa           20230413_D12.fsa 508.37      NA   1230 #> 20230413_E01.fsa           20230413_E01.fsa 563.54      NA    511 #> 20230413_E02.fsa           20230413_E02.fsa 562.65      NA    509 #> 20230413_E03.fsa           20230413_E03.fsa 567.02      NA    595 #> 20230413_E04.fsa           20230413_E04.fsa 549.36      NA    396 #> 20230413_E05.fsa           20230413_E05.fsa 543.62      NA    489 #> 20230413_E06.fsa           20230413_E06.fsa 546.38      NA    515 #> 20230413_E07.fsa           20230413_E07.fsa 458.57      NA   1254 #> 20230413_E08.fsa           20230413_E08.fsa 461.43      NA   1618 #> 20230413_E09.fsa           20230413_E09.fsa 464.23      NA   1494 #> 20230413_E10.fsa           20230413_E10.fsa 478.00      NA    583 #> 20230413_E11.fsa           20230413_E11.fsa 477.82      NA    823 #> 20230413_E12.fsa           20230413_E12.fsa 480.13      NA    989 #> 20230413_F01.fsa           20230413_F01.fsa 476.53      NA    807 #> 20230413_F02.fsa           20230413_F02.fsa 474.28      NA   1001 #> 20230413_F03.fsa           20230413_F03.fsa 477.33      NA    948 #> 20230413_F04.fsa           20230413_F04.fsa 498.71      NA   1075 #> 20230413_F05.fsa           20230413_F05.fsa 502.13      NA    643 #> 20230413_F06.fsa           20230413_F06.fsa 505.53      NA    284 #> 20230413_F07.fsa           20230413_F07.fsa 564.89      NA    651 #> 20230413_F08.fsa           20230413_F08.fsa 564.89      NA    366 #> 20230413_F09.fsa           20230413_F09.fsa 573.83      NA    256 #> 20230413_F10.fsa           20230413_F10.fsa 549.17      NA    536 #> 20230413_F11.fsa           20230413_F11.fsa 542.86      NA    685 #> 20230413_F12.fsa           20230413_F12.fsa 542.65      NA    572 #> 20230413_G01.fsa           20230413_G01.fsa 451.96      NA   1101 #> 20230413_G02.fsa           20230413_G02.fsa 452.61      NA   2877 #> 20230413_G03.fsa           20230413_G03.fsa 452.82      NA    258 #> 20230413_G04.fsa           20230413_G04.fsa 471.85      NA   3452 #> 20230413_G05.fsa           20230413_G05.fsa 471.58      NA   2988 #> 20230413_G06.fsa           20230413_G06.fsa 471.89      NA   2844 #> 20230413_G07.fsa           20230413_G07.fsa 466.33      NA   3363 #> 20230413_G08.fsa           20230413_G08.fsa 466.67      NA   1918 #> 20230413_G09.fsa           20230413_G09.fsa 466.32      NA   3935 #> 20230413_G10.fsa           20230413_G10.fsa 498.92      NA   2957 #> 20230413_G11.fsa           20230413_G11.fsa 498.71      NA    154 #> 20230413_G12.fsa           20230413_G12.fsa 495.11      NA   2950 #> 20230413_H01.fsa           20230413_H01.fsa 545.31      NA   2473 #> 20230413_H02.fsa           20230413_H02.fsa 545.51      NA   1973 #> 20230413_H03.fsa           20230413_H03.fsa 543.00      NA   1896 #> 20230413_H04.fsa           20230413_H04.fsa 524.47      NA   2013 #> 20230413_H05.fsa           20230413_H05.fsa 526.88      NA   1741 #> 20230413_H06.fsa           20230413_H06.fsa 524.38      NA   1340 #> 20230413_H07.fsa           20230413_H07.fsa 414.55      NA   3798 #> 20230413_H08.fsa           20230413_H08.fsa 420.70      NA   2081 #> S-21-211_20220630.fsa S-21-211_20220630.fsa 414.83      NA   3159 #> S-21-212_20220630.fsa S-21-212_20220630.fsa 420.87      NA   2653"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract All Fragments — extract_fragments","title":"Extract All Fragments — extract_fragments","text":"Extracts peak data sample list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract All Fragments — extract_fragments","text":"","code":"extract_fragments(fragments_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract All Fragments — extract_fragments","text":"fragments_list list fragments_repeats objects containing fragment data.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract All Fragments — extract_fragments","text":"dataframe containing peak data sample","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract All Fragments — extract_fragments","text":"","code":"gm_raw <- trace::example_data metadata <- trace::metadata  test_fragments <- peak_table_to_fragments(gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 400 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  add_metadata(   fragments_list = test_fragments,   metadata_data.frame = metadata )  find_alleles(   fragments_list = test_fragments )  call_repeats(   fragments_list = test_fragments,   repeat_calling_algorithm = \"simple\",   assay_size_without_repeat = 87,   repeat_size = 3 ) #> Warning: Repeats were not called in the following samples (no allele in sample): 20230413_A04.fsa, 20230413_D11.fsa  extract_alleles(test_fragments) #>                                   unique_id   size  repeats height #> 20230413_A01.fsa           20230413_A01.fsa 465.82 126.2733   1051 #> 20230413_A02.fsa           20230413_A02.fsa 463.36 125.4533   1096 #> 20230413_A03.fsa           20230413_A03.fsa 466.15 126.3833   1210 #> 20230413_A04.fsa           20230413_A04.fsa     NA       NA     NA #> 20230413_A05.fsa           20230413_A05.fsa 485.98 132.9933    797 #> 20230413_A06.fsa           20230413_A06.fsa 502.08 138.3600    959 #> 20230413_A07.fsa           20230413_A07.fsa 480.54 131.1800   1240 #> 20230413_A08.fsa           20230413_A08.fsa 480.54 131.1800   1230 #> 20230413_A09.fsa           20230413_A09.fsa 486.32 133.1067   1284 #> 20230413_A10.fsa           20230413_A10.fsa 505.21 139.4033   1594 #> 20230413_A11.fsa           20230413_A11.fsa 504.69 139.2300   1554 #> 20230413_A12.fsa           20230413_A12.fsa 504.29 139.0967   1272 #> 20230413_B01.fsa           20230413_B01.fsa 563.96 158.9867    537 #> 20230413_B02.fsa           20230413_B02.fsa 560.83 157.9433   1031 #> 20230413_B03.fsa           20230413_B03.fsa 561.04 158.0133    695 #> 20230413_B04.fsa           20230413_B04.fsa 549.17 154.0567    871 #> 20230413_B05.fsa           20230413_B05.fsa 548.96 153.9867    913 #> 20230413_B06.fsa           20230413_B06.fsa 543.13 152.0433    722 #> 20230413_B07.fsa           20230413_B07.fsa 472.28 128.4267     38 #> 20230413_B08.fsa           20230413_B08.fsa 461.33 124.7767    665 #> 20230413_B09.fsa           20230413_B09.fsa 463.92 125.6400    762 #> 20230413_B10.fsa           20230413_B10.fsa 492.43 135.1433    961 #> 20230413_B11.fsa           20230413_B11.fsa 491.98 134.9933    879 #> 20230413_B12.fsa           20230413_B12.fsa 482.52 131.8400   1355 #> 20230413_C01.fsa           20230413_C01.fsa 482.43 131.8100   1068 #> 20230413_C02.fsa           20230413_C02.fsa 480.10 131.0333   1164 #> 20230413_C03.fsa           20230413_C03.fsa 480.30 131.1000   1083 #> 20230413_C04.fsa           20230413_C04.fsa 508.75 140.5833   1094 #> 20230413_C05.fsa           20230413_C05.fsa 508.54 140.5133   1123 #> 20230413_C06.fsa           20230413_C06.fsa 509.15 140.7167   1402 #> 20230413_C07.fsa           20230413_C07.fsa 569.58 160.8600    718 #> 20230413_C08.fsa           20230413_C08.fsa 569.80 160.9333    836 #> 20230413_C09.fsa           20230413_C09.fsa 567.50 160.1667    790 #> 20230413_C10.fsa           20230413_C10.fsa 548.98 153.9933    835 #> 20230413_C11.fsa           20230413_C11.fsa 546.12 153.0400    751 #> 20230413_C12.fsa           20230413_C12.fsa 552.04 155.0133    845 #> 20230413_D01.fsa           20230413_D01.fsa 462.90 125.3000   1466 #> 20230413_D02.fsa           20230413_D02.fsa 460.65 124.5500   1375 #> 20230413_D03.fsa           20230413_D03.fsa 460.94 124.6467   1562 #> 20230413_D04.fsa           20230413_D04.fsa 483.21 132.0700    676 #> 20230413_D05.fsa           20230413_D05.fsa 480.48 131.1600    469 #> 20230413_D06.fsa           20230413_D06.fsa 486.52 133.1733    457 #> 20230413_D07.fsa           20230413_D07.fsa 478.16 130.3867   1361 #> 20230413_D08.fsa           20230413_D08.fsa 475.33 129.4433   1382 #> 20230413_D09.fsa           20230413_D09.fsa 475.37 129.4567   1123 #> 20230413_D10.fsa           20230413_D10.fsa 512.29 141.7633    692 #> 20230413_D11.fsa           20230413_D11.fsa     NA       NA     NA #> 20230413_D12.fsa           20230413_D12.fsa 508.37 140.4567   1230 #> 20230413_E01.fsa           20230413_E01.fsa 563.54 158.8467    511 #> 20230413_E02.fsa           20230413_E02.fsa 562.65 158.5500    509 #> 20230413_E03.fsa           20230413_E03.fsa 567.02 160.0067    595 #> 20230413_E04.fsa           20230413_E04.fsa 549.36 154.1200    396 #> 20230413_E05.fsa           20230413_E05.fsa 543.62 152.2067    489 #> 20230413_E06.fsa           20230413_E06.fsa 546.38 153.1267    515 #> 20230413_E07.fsa           20230413_E07.fsa 458.57 123.8567   1254 #> 20230413_E08.fsa           20230413_E08.fsa 461.43 124.8100   1618 #> 20230413_E09.fsa           20230413_E09.fsa 464.23 125.7433   1494 #> 20230413_E10.fsa           20230413_E10.fsa 478.00 130.3333    583 #> 20230413_E11.fsa           20230413_E11.fsa 477.82 130.2733    823 #> 20230413_E12.fsa           20230413_E12.fsa 480.13 131.0433    989 #> 20230413_F01.fsa           20230413_F01.fsa 476.53 129.8433    807 #> 20230413_F02.fsa           20230413_F02.fsa 474.28 129.0933   1001 #> 20230413_F03.fsa           20230413_F03.fsa 477.33 130.1100    948 #> 20230413_F04.fsa           20230413_F04.fsa 498.71 137.2367   1075 #> 20230413_F05.fsa           20230413_F05.fsa 502.13 138.3767    643 #> 20230413_F06.fsa           20230413_F06.fsa 505.53 139.5100    284 #> 20230413_F07.fsa           20230413_F07.fsa 564.89 159.2967    651 #> 20230413_F08.fsa           20230413_F08.fsa 564.89 159.2967    366 #> 20230413_F09.fsa           20230413_F09.fsa 573.83 162.2767    256 #> 20230413_F10.fsa           20230413_F10.fsa 549.17 154.0567    536 #> 20230413_F11.fsa           20230413_F11.fsa 542.86 151.9533    685 #> 20230413_F12.fsa           20230413_F12.fsa 542.65 151.8833    572 #> 20230413_G01.fsa           20230413_G01.fsa 451.96 121.6533   1101 #> 20230413_G02.fsa           20230413_G02.fsa 452.61 121.8700   2877 #> 20230413_G03.fsa           20230413_G03.fsa 452.82 121.9400    258 #> 20230413_G04.fsa           20230413_G04.fsa 471.85 128.2833   3452 #> 20230413_G05.fsa           20230413_G05.fsa 471.58 128.1933   2988 #> 20230413_G06.fsa           20230413_G06.fsa 471.89 128.2967   2844 #> 20230413_G07.fsa           20230413_G07.fsa 466.33 126.4433   3363 #> 20230413_G08.fsa           20230413_G08.fsa 466.67 126.5567   1918 #> 20230413_G09.fsa           20230413_G09.fsa 466.32 126.4400   3935 #> 20230413_G10.fsa           20230413_G10.fsa 498.92 137.3067   2957 #> 20230413_G11.fsa           20230413_G11.fsa 498.71 137.2367    154 #> 20230413_G12.fsa           20230413_G12.fsa 495.11 136.0367   2950 #> 20230413_H01.fsa           20230413_H01.fsa 545.31 152.7700   2473 #> 20230413_H02.fsa           20230413_H02.fsa 545.51 152.8367   1973 #> 20230413_H03.fsa           20230413_H03.fsa 543.00 152.0000   1896 #> 20230413_H04.fsa           20230413_H04.fsa 524.47 145.8233   2013 #> 20230413_H05.fsa           20230413_H05.fsa 526.88 146.6267   1741 #> 20230413_H06.fsa           20230413_H06.fsa 524.38 145.7933   1340 #> 20230413_H07.fsa           20230413_H07.fsa 414.55 109.1833   3798 #> 20230413_H08.fsa           20230413_H08.fsa 420.70 111.2333   2081 #> S-21-211_20220630.fsa S-21-211_20220630.fsa 414.83 109.2767   3159 #> S-21-212_20220630.fsa S-21-212_20220630.fsa 420.87 111.2900   2653"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ladder summary — extract_ladder_summary","title":"Extract ladder summary — extract_ladder_summary","text":"Extract table summarizing ladder models","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ladder summary — extract_ladder_summary","text":"","code":"extract_ladder_summary(fragments_trace_list, sort = FALSE)"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ladder summary — extract_ladder_summary","text":"fragments_trace_list list fragments trace objects sort logical statement samples ordered average ladder R-squared.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ladder summary — extract_ladder_summary","text":"dataframe ladder quality information","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract ladder summary — extract_ladder_summary","text":"ladder peaks assigned using custom algorithm maximizes fit detected ladder peaks given base-pair sizes. base pair assigned using local Southern method. Basically, data point, linear models made lower upper 3 size standard predicted sizes averaged. function summarizes R-squared values individual linear models.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_ladder_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract ladder summary — extract_ladder_summary","text":"","code":"fsa_list <- lapply(cell_line_fsa_list, function(x) x$clone())    find_ladders(fsa_list, show_progress_bar = FALSE)    extract_ladder_summary(fsa_list, sort = TRUE) #>                                   unique_id   avg_rsq   min_rsq #> S-21-211_20220630.fsa S-21-211_20220630.fsa 0.9995315 0.9987599 #> S-21-212_20220630.fsa S-21-212_20220630.fsa 0.9995515 0.9988479 #> 20230413_G01.fsa           20230413_G01.fsa 0.9995583 0.9986045 #> 20230413_F01.fsa           20230413_F01.fsa 0.9995721 0.9989598 #> 20230413_B11.fsa           20230413_B11.fsa 0.9995841 0.9986236 #> 20230413_A12.fsa           20230413_A12.fsa 0.9995856 0.9988091 #> 20230413_H05.fsa           20230413_H05.fsa 0.9995956 0.9989546 #> 20230413_D12.fsa           20230413_D12.fsa 0.9995965 0.9986236 #> 20230413_H07.fsa           20230413_H07.fsa 0.9995995 0.9988479 #> 20230413_D04.fsa           20230413_D04.fsa 0.9996058 0.9986115 #> 20230413_B01.fsa           20230413_B01.fsa 0.9996059 0.9988479 #> 20230413_F12.fsa           20230413_F12.fsa 0.9996078 0.9986236 #> 20230413_E01.fsa           20230413_E01.fsa 0.9996095 0.9988082 #> 20230413_H01.fsa           20230413_H01.fsa 0.9996118 0.9988091 #> 20230413_G02.fsa           20230413_G02.fsa 0.9996129 0.9989598 #> 20230413_B12.fsa           20230413_B12.fsa 0.9996136 0.9989245 #> 20230413_G03.fsa           20230413_G03.fsa 0.9996139 0.9989546 #> 20230413_B02.fsa           20230413_B02.fsa 0.9996151 0.9989546 #> 20230413_G12.fsa           20230413_G12.fsa 0.9996156 0.9988872 #> 20230413_F02.fsa           20230413_F02.fsa 0.9996156 0.9989598 #> 20230413_D11.fsa           20230413_D11.fsa 0.9996160 0.9988872 #> 20230413_E12.fsa           20230413_E12.fsa 0.9996172 0.9989598 #> 20230413_A02.fsa           20230413_A02.fsa 0.9996173 0.9989261 #> 20230413_B10.fsa           20230413_B10.fsa 0.9996189 0.9986115 #> 20230413_H04.fsa           20230413_H04.fsa 0.9996191 0.9987665 #> 20230413_C01.fsa           20230413_C01.fsa 0.9996193 0.9988872 #> 20230413_G11.fsa           20230413_G11.fsa 0.9996193 0.9989261 #> 20230413_A08.fsa           20230413_A08.fsa 0.9996200 0.9986115 #> 20230413_E04.fsa           20230413_E04.fsa 0.9996210 0.9986115 #> 20230413_G09.fsa           20230413_G09.fsa 0.9996218 0.9989546 #> 20230413_H03.fsa           20230413_H03.fsa 0.9996220 0.9988857 #> 20230413_G08.fsa           20230413_G08.fsa 0.9996224 0.9986115 #> 20230413_H02.fsa           20230413_H02.fsa 0.9996232 0.9989245 #> 20230413_D01.fsa           20230413_D01.fsa 0.9996249 0.9988479 #> 20230413_E03.fsa           20230413_E03.fsa 0.9996271 0.9988881 #> 20230413_C02.fsa           20230413_C02.fsa 0.9996303 0.9989546 #> 20230413_A11.fsa           20230413_A11.fsa 0.9996303 0.9989598 #> 20230413_D07.fsa           20230413_D07.fsa 0.9996312 0.9986115 #> 20230413_E02.fsa           20230413_E02.fsa 0.9996313 0.9988479 #> 20230413_B07.fsa           20230413_B07.fsa 0.9996315 0.9986115 #> 20230413_G05.fsa           20230413_G05.fsa 0.9996316 0.9988479 #> 20230413_F10.fsa           20230413_F10.fsa 0.9996318 0.9986115 #> 20230413_A10.fsa           20230413_A10.fsa 0.9996320 0.9989546 #> 20230413_F11.fsa           20230413_F11.fsa 0.9996340 0.9989546 #> 20230413_C07.fsa           20230413_C07.fsa 0.9996343 0.9986115 #> 20230413_A06.fsa           20230413_A06.fsa 0.9996351 0.9989546 #> 20230413_E08.fsa           20230413_E08.fsa 0.9996360 0.9986115 #> 20230413_D03.fsa           20230413_D03.fsa 0.9996374 0.9989546 #> 20230413_G10.fsa           20230413_G10.fsa 0.9996375 0.9989546 #> 20230413_A01.fsa           20230413_A01.fsa 0.9996380 0.9987682 #> 20230413_H08.fsa           20230413_H08.fsa 0.9996397 0.9989546 #> 20230413_F04.fsa           20230413_F04.fsa 0.9996400 0.9989546 #> 20230413_B03.fsa           20230413_B03.fsa 0.9996430 0.9989546 #> 20230413_G07.fsa           20230413_G07.fsa 0.9996454 0.9989546 #> 20230413_F09.fsa           20230413_F09.fsa 0.9996457 0.9988881 #> 20230413_G06.fsa           20230413_G06.fsa 0.9996496 0.9989546 #> 20230413_B04.fsa           20230413_B04.fsa 0.9996499 0.9989546 #> 20230413_A09.fsa           20230413_A09.fsa 0.9996507 0.9989546 #> 20230413_H06.fsa           20230413_H06.fsa 0.9996508 0.9989261 #> 20230413_D02.fsa           20230413_D02.fsa 0.9996510 0.9988479 #> 20230413_F03.fsa           20230413_F03.fsa 0.9996514 0.9989261 #> 20230413_D08.fsa           20230413_D08.fsa 0.9996529 0.9986115 #> 20230413_C06.fsa           20230413_C06.fsa 0.9996536 0.9989278 #> 20230413_E11.fsa           20230413_E11.fsa 0.9996536 0.9989546 #> 20230413_C03.fsa           20230413_C03.fsa 0.9996544 0.9989261 #> 20230413_G04.fsa           20230413_G04.fsa 0.9996552 0.9989261 #> 20230413_F08.fsa           20230413_F08.fsa 0.9996564 0.9989278 #> 20230413_A04.fsa           20230413_A04.fsa 0.9996570 0.9988872 #> 20230413_B09.fsa           20230413_B09.fsa 0.9996575 0.9989546 #> 20230413_E06.fsa           20230413_E06.fsa 0.9996576 0.9989278 #> 20230413_F05.fsa           20230413_F05.fsa 0.9996581 0.9989278 #> 20230413_D05.fsa           20230413_D05.fsa 0.9996581 0.9989546 #> 20230413_C10.fsa           20230413_C10.fsa 0.9996596 0.9989546 #> 20230413_D10.fsa           20230413_D10.fsa 0.9996598 0.9989546 #> 20230413_B05.fsa           20230413_B05.fsa 0.9996600 0.9989546 #> 20230413_A03.fsa           20230413_A03.fsa 0.9996608 0.9989261 #> 20230413_E10.fsa           20230413_E10.fsa 0.9996609 0.9989546 #> 20230413_C12.fsa           20230413_C12.fsa 0.9996609 0.9989623 #> 20230413_C11.fsa           20230413_C11.fsa 0.9996636 0.9990365 #> 20230413_F06.fsa           20230413_F06.fsa 0.9996678 0.9988881 #> 20230413_C05.fsa           20230413_C05.fsa 0.9996684 0.9989546 #> 20230413_C08.fsa           20230413_C08.fsa 0.9996702 0.9989261 #> 20230413_F07.fsa           20230413_F07.fsa 0.9996706 0.9988881 #> 20230413_A05.fsa           20230413_A05.fsa 0.9996732 0.9989646 #> 20230413_E05.fsa           20230413_E05.fsa 0.9996758 0.9989278 #> 20230413_C04.fsa           20230413_C04.fsa 0.9996818 0.9990027 #> 20230413_D06.fsa           20230413_D06.fsa 0.9996841 0.9990027 #> 20230413_A07.fsa           20230413_A07.fsa 0.9996898 0.9990775 #> 20230413_B08.fsa           20230413_B08.fsa 0.9996901 0.9990775 #> 20230413_B06.fsa           20230413_B06.fsa 0.9996961 0.9990775 #> 20230413_E07.fsa           20230413_E07.fsa 0.9996983 0.9989670 #> 20230413_D09.fsa           20230413_D09.fsa 0.9997005 0.9990775 #> 20230413_E09.fsa           20230413_E09.fsa 0.9997041 0.9991142 #> 20230413_C09.fsa           20230413_C09.fsa 0.9997049 0.9990403"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_trace_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract traces — extract_trace_table","title":"Extract traces — extract_trace_table","text":"Extract raw trace list fragments objects","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_trace_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract traces — extract_trace_table","text":"","code":"extract_trace_table(fragments_trace_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/extract_trace_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract traces — extract_trace_table","text":"fragments_trace_list list fragments objects","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_trace_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract traces — extract_trace_table","text":"dataframe raw trace data. row representing single scan.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/extract_trace_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract traces — extract_trace_table","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  extracted_traces <- extract_trace_table(fsa_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Alleles — find_alleles","title":"Find Alleles — find_alleles","text":"function identifies main allele within fragment object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Alleles — find_alleles","text":"","code":"find_alleles(   fragments_list,   peak_region_size_gap_threshold = 6,   peak_region_height_threshold_multiplier = 1 )"},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Alleles — find_alleles","text":"fragments_list list fragment objects containing peak data. peak_region_size_gap_threshold Gap threshold identifying peak regions. peak_region_size_gap_threshold parameter used determine maximum allowed gap peak sizes within peak region. Adjusting parameter affects size range peaks can grouped together region. smaller value makes stringent, larger value groups peaks greater size differences, leading broader peak regions may encompass wider size ranges. peak_region_height_threshold_multiplier Multiplier peak height threshold. peak_region_height_threshold_multiplier parameter allows adjusting threshold identifying peak regions based peak heights. Increasing multiplier value result higher thresholds, making stringent consider peaks part peak region. Conversely, reducing multiplier value make criteria less strict, potentially leading peaks grouped peak regions. important note parameter's optimal value depends characteristics data specific analysis goals. Choosing appropriate value parameter can help accurately identifying meaningful peak regions data.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Alleles — find_alleles","text":"function modifies list fragments_repeats objects place alleles added.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Alleles — find_alleles","text":"function finds main alleles fragment list identifying clusters peaks (\"peak regions\") highest signal intensities. based idea PCR amplicons repeats clusters peaks (somatic mosaicism PCR artifacts) help differentiate main allele interest capillary electrophoresis noise/contamination. tallest peaks selected allele. means sample multiple alleles, need make sure data subsetted exclude second allele. example human cell line shorter repeat, recommend using min_bp_size find_fragments() make sure smaller allele excluded. Otherwise, smaller taller allele set allele. parameters peak_region_height_threshold_multiplier peak_region_size_gap_threshold need adjusted peaks found reason. influence criteria identifying peak regions, finding right balance crucial.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_alleles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Alleles — find_alleles","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  fragments_list <- find_fragments(fsa_list,   min_bp_size = 300 )   find_alleles(   fragments_list,   peak_region_size_gap_threshold = 6,   peak_region_height_threshold_multiplier = 1 )"},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Find fragment peaks — find_fragments","title":"Find fragment peaks — find_fragments","text":"Find fragment peaks continuous trace data convert fragments_repeats class.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find fragment peaks — find_fragments","text":"","code":"find_fragments(   fragments_trace_list,   smoothing_window = 21,   minimum_peak_signal = 20,   min_bp_size = 100,   max_bp_size = 1000,   ... )"},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find fragment peaks — find_fragments","text":"fragments_trace_list list fragments_trace objects containing fragment data. smoothing_window numeric: signal smoothing window size passed pracma::savgol() minimum_peak_signal numeric: minimum height peak smoothed trace min_bp_size numeric: minimum bp size peaks consider max_bp_size numeric: maximum bp size peaks consider ... pass additional arguments findpeaks, change default arguments set. minimum_peak_signal passed findpeaks minpeakheight, peakpat set '[+]{6,}[0]*[-]{6,}' peaks flat tops still called, see https://stackoverflow.com/questions/47914035/identify-sustained-peaks-using-pracmafindpeaks","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find fragment peaks — find_fragments","text":"list fragments_repeats objects.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find fragment peaks — find_fragments","text":"find_fragments() takes list fragments_trace objects returns list new fragments_repeats objects. function basically wrapper around pracma::findpeaks. mentioned , default arguments arguments pracma::findpeaks can changed passing find_fragments ... . many inappropriate peaks called, may also solved different repeat calling algorithms call_repeats().","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find fragment peaks — find_fragments","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list) #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100%  fragments_list <- find_fragments(fsa_list,   min_bp_size = 300 )   # Manually inspect the ladders plot_traces(fragments_list,   show_peaks = TRUE, n_facet_col = 1,   xlim = c(400, 550), ylim = c(0, 1200) )"},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":null,"dir":"Reference","previous_headings":"","what":"Ladder and bp sizing — find_ladders","title":"Ladder and bp sizing — find_ladders","text":"Find ladder peaks use call bp size","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ladder and bp sizing — find_ladders","text":"","code":"find_ladders(   fragments_trace,   ladder_channel = \"DATA.105\",   signal_channel = \"DATA.1\",   ladder_sizes = c(50, 75, 100, 139, 150, 160, 200, 250, 300, 340, 350, 400, 450, 490,     500),   ladder_start_scan = NULL,   minimum_peak_signal = NULL,   zero_floor = FALSE,   scan_subset = NULL,   ladder_selection_window = 5,   max_combinations = 2500000,   smoothing_window = 21,   warning_rsq_threshold = 0.998,   show_progress_bar = TRUE )"},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ladder and bp sizing — find_ladders","text":"fragments_trace list 'read_fsa' function ladder_channel string: channel fsa file contains ladder signal signal_channel string: channel fsa file contains data signal ladder_sizes numeric vector: bp sizes ladder used fragment analysis. defaults GeneScan™ 500 LIZ™ ladder_start_scan numeric: indicate scan number start looking ladder peaks. Usually can automatically found (set NULL) since big spike right start. However, ladder peaks taller big spike, need set starting scan number manually. minimum_peak_signal numeric: minimum height peak smoothed signal. zero_floor logical: set TRUE, negative values set zero. can help deal cases peaks negative direction interfere peak detection. scan_subset numeric vector (length 2): filter ladder data signal selected scans (eg scan_subset = c(3000, 5000)). pracma::savgol(). ladder_selection_window numeric: ladder assigning algorithm, iterate scans blocks test linear fit ( can assume ladder linear short distance) value defines large block peaks . max_combinations numeric: maximum number ladder combinations tested smoothing_window numeric: ladder signal smoothing window size passed warning_rsq_threshold value function warn parts ladder R-squared values specified threshold. show_progress_bar show progress bar","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ladder and bp sizing — find_ladders","text":"function modifies list fragments_trace objects place ladder assigned base pair calculated.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ladder and bp sizing — find_ladders","text":"function takes list fragments_trace files (output read_fsa) identifies ladders ladder channel used call bp size. output list fragments_traces. bp sizes assigned using local Southern method. Basically, data point, linear models made lower upper 3 size standard predicted sizes averaged. Use plot_data_channels() plot raw data fsa file identify channel ladder data . ladder peaks assigned largest smallest. recommend excluding size standard peaks less 50 bp (eg size standard 35 bp). ladder manually inspected make sure correctly assigned.","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/find_ladders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ladder and bp sizing — find_ladders","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  # Manually inspect the ladders plot_ladders(fsa_list[1])"},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix ladders interactively — fix_ladders_interactive","title":"Fix ladders interactively — fix_ladders_interactive","text":"app fixing ladders","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix ladders interactively — fix_ladders_interactive","text":"","code":"fix_ladders_interactive(fragment_trace_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix ladders interactively — fix_ladders_interactive","text":"fragment_trace_list list fragments_trace objects containing fragment data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix ladders interactively — fix_ladders_interactive","text":"interactive shiny app fixing ladders","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix ladders interactively — fix_ladders_interactive","text":"function helps fix ladders incorrectly assigned. Run fix_ladders_interactive() provide output find_ladders. app, sample, click line incorrect ladder size drag correct peak. satisfied ladders broken samples, click download button generate file ladder correction data. Read file back R using readRDS, use fix_ladders_manual() supply ladder correction data ladder_df_list. allows manually corrected data saved used within script correct need done every time.","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix ladders interactively — fix_ladders_interactive","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[\"20230413_B03.fsa\"], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  # to create an example, lets brake one of the ladders brake_ladder_list <- list(   \"20230413_B03.fsa\" = data.frame(     size = c(35, 50, 75, 100, 139, 150, 160, 200, 250, 300, 340, 350, 400, 450, 490, 500),     scan = c(1555, 1633, 1783, 1827, 2159, 2218, 2278, 2525, 2828, 3161, 3408, 3470, 3792,              4085, 4322, 4370)   ) )  fix_ladders_manual(   fsa_list,   brake_ladder_list ) #> Fixing ladder for 20230413_B03.fsa #> Warning: sample 20230413_B03.fsa has badly fitting ladder for bp sizes: 50-100, 75-139, 100-150  plot_ladders(fsa_list)    if (interactive()) {   fix_ladders_interactive(test_ladders_broken) }  # once you have corrected your ladders in the app, # export the data we need to incorporate that into the script: # ladder_df_list <- readRDS('path/to/exported/data.rds') # test_ladders_fixed <- fix_ladders_manual(test_ladders_broken, ladder_df_list)  # plot_ladders(test_ladders_fixed[\"20230413_B03.fsa\"], #           n_facet_col = 1)"},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix ladders manually — fix_ladders_manual","title":"Fix ladders manually — fix_ladders_manual","text":"Manually assign ladder peaks samples fragments_trace_list","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix ladders manually — fix_ladders_manual","text":"","code":"fix_ladders_manual(fragments_trace_list, ladder_df_list)"},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix ladders manually — fix_ladders_manual","text":"fragments_trace_list list fragments_trace objects ladder_df_list list dataframes, names unique id value dataframe. dataframe two columns, size (indicating bp standard) scan (scan value ladder peak). critical element name list unique id sample.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix ladders manually — fix_ladders_manual","text":"function modifies list fragments_trace objects place selected ladders fixed.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix ladders manually — fix_ladders_manual","text":"function returns fragments_trace list length supplied. goes sample either just returns fragments_trace unique id match samples need ladder fixed, one fix, use supplied dataframe ladder_df_list ladder. reruns bp sizing methods samples. best used fix_ladders_interactive() can generate ladder_df_list.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fix_ladders_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix ladders manually — fix_ladders_manual","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  # first manually determine the real ladder peaks using your judgment # the raw ladder signal can be extracted raw_ladder <- fsa_list[1]$raw_ladder  # or we can look at the \"trace_bp_df\" to see a dataframe that includes the scan and ladder signal raw_ladder_df <- fsa_list[[1]]$trace_bp_df[, c(\"unique_id\", \"scan\", \"ladder_signal\")] plot(raw_ladder_df$scan, raw_ladder_df$ladder_signal)   # once you have figured what sizes align with which peak, make a dataframe. The # fix_ladders_manual() function takes a list as an input so that multiple ladders # can be fixed. Each sample would have the the list element name as it's unique id.  example_list <- list(   \"20230413_A01.fsa\" = data.frame(     size = c(100, 139, 150, 160, 200, 250, 300, 340, 350, 400, 450, 490, 500),     scan = c(1971, 2208, 2269, 2329, 2581, 2888, 3228, 3479, 3543, 3872, 4170, 4412, 4460)   ) )  fix_ladders_manual(   fsa_list,   example_list ) #> Fixing ladder for 20230413_A01.fsa"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"fragments object — fragments","title":"fragments object — fragments","text":"R6 Class representing fragments object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fragments object — fragments","text":"parent class fragments_trace fragments_repeats object. idea shared fields methods inherited object, directly used.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"fragments object — fragments","text":"unique_id unique id sample usually file name metrics_group_id sample grouping metrics calculations. Associated add_metadata(). metrics_baseline_control logical indicate sample baseline control. Associated add_metadata(). batch_run_id fragment analysis run. Associated add_metadata(). batch_sample_id id sample used size standard repeat calculation. Associated add_metadata().","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"fragments object — fragments","text":"fragments$new() fragments$print() fragments$plot_trace() fragments$clone()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"fragments object — fragments","text":"initialization function used since child classes main object package.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments object — fragments","text":"","code":"fragments$new(unique_id)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments object — fragments","text":"unique_id unique_id","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"fragments object — fragments","text":"function print informative information console","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments object — fragments","text":"","code":"fragments$print()"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"method-plot-trace-","dir":"Reference","previous_headings":"","what":"Method plot_trace()","title":"fragments object — fragments","text":"plot trace data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments object — fragments","text":"","code":"fragments$plot_trace(   show_peaks = TRUE,   x_axis = NULL,   ylim = NULL,   xlim = NULL,   height_color_threshold = 0.05,   plot_title = NULL )"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments object — fragments","text":"show_peaks logical say called peaks plotted top trace. valid fragments_repeats objects. x_axis Either \"size\" \"repeats\" indicate plotted x-axis. ylim numeric vector length two specifying y axis limits xlim numeric vector length two specifying x axis limits height_color_threshold threshold value colour peaks relative tallest peak. plot_title character string setting plot title. Defaults unique id object","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"fragments object — fragments","text":"base R plot","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"fragments object — fragments","text":"objects class cloneable method.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments object — fragments","text":"","code":"fragments$clone(deep = FALSE)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments object — fragments","text":"deep Whether make deep clone.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":null,"dir":"Reference","previous_headings":"","what":"fragments_repeats object — fragments_repeats","title":"fragments_repeats object — fragments_repeats","text":"R6 Class representing fragments_repeats object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fragments_repeats object — fragments_repeats","text":"idea behind class store data processing peak level data towards calculation repeat instability metrics. contains important setters getters alleles index peaks. important exactly correct size repeat value set alleles index peak. used subsetting etc, exactly correct many functions break. also contains methods plotting ladder traces (available).","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"fragments_repeats object — fragments_repeats","text":"trace::fragments -> fragments_repeats","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"fragments_repeats object — fragments_repeats","text":"trace_bp_df dataframe bp size every scan find_ladders(). peak_table_df dataframe containing fragment peak level information. repeat_table_df dataframe containing fragment peak level information repeat size added. May may peak_table_df depending options chosen call_repeats.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"fragments_repeats object — fragments_repeats","text":"trace::fragments$initialize() trace::fragments$plot_trace() trace::fragments$print()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"fragments_repeats object — fragments_repeats","text":"fragments_repeats$get_allele_peak() fragments_repeats$set_allele_peak() fragments_repeats$get_index_peak() fragments_repeats$set_index_peak() fragments_repeats$plot_fragments() fragments_repeats$clone()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-get-allele-peak-","dir":"Reference","previous_headings":"","what":"Method get_allele_peak()","title":"fragments_repeats object — fragments_repeats","text":"returns list allele information object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$get_allele_peak()"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-set-allele-peak-","dir":"Reference","previous_headings":"","what":"Method set_allele_peak()","title":"fragments_repeats object — fragments_repeats","text":"sets single allele size/repeat. searches appropriate peak table finds closest peak value provided.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$set_allele_peak(unit, value)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_repeats object — fragments_repeats","text":"unit Either \"size\" \"repeats\" indicate value providing bp size repeat length. value Numeric vector (length one) size/repeat length set.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-get-index-peak-","dir":"Reference","previous_headings":"","what":"Method get_index_peak()","title":"fragments_repeats object — fragments_repeats","text":"returns list index peak information object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$get_index_peak()"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-set-index-peak-","dir":"Reference","previous_headings":"","what":"Method set_index_peak()","title":"fragments_repeats object — fragments_repeats","text":"sets index repeat length. searches repeat table finds closest peak value provided.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$set_index_peak(value)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_repeats object — fragments_repeats","text":"value Numeric vector (length one) repeat length set index peak.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-plot-fragments-","dir":"Reference","previous_headings":"","what":"Method plot_fragments()","title":"fragments_repeats object — fragments_repeats","text":"plots peak/repeat table histogram","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$plot_fragments(ylim = NULL, xlim = NULL, plot_title = NULL)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_repeats object — fragments_repeats","text":"ylim numeric vector length two specifying y axis limits xlim numeric vector length two specifying x axis limits plot_title character string setting plot title. Defaults unique id object","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"fragments_repeats object — fragments_repeats","text":"objects class cloneable method.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_repeats object — fragments_repeats","text":"","code":"fragments_repeats$clone(deep = FALSE)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_repeats.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_repeats object — fragments_repeats","text":"deep Whether make deep clone.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"fragments_trace object — fragments_trace","title":"fragments_trace object — fragments_trace","text":"R6 Class representing fragments_trace object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fragments_trace object — fragments_trace","text":"idea behind class store data processing continuous trace-level information fsa file towards peak level data. also contains methods plotting ladder traces","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"fragments_trace object — fragments_trace","text":"trace::fragments -> fragments_trace","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"fragments_trace object — fragments_trace","text":"unique_id unique id sample usually file name fsa whole fsa file, output seqinr::read.abif() raw_ladder raw data ladder channel raw_data raw data sample channel scan scan number off_scale_scans vector indicating scales big scale. Note can channel ladder_df dataframe identified ladder find_ladders(). Scan scan number peak size associated bp size. trace_bp_df dataframe bp size every scan find_ladders(). local_southern_mod Output local_southern() function (exported). basically just list lm() breaking ladder chunks three.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"fragments_trace object — fragments_trace","text":"trace::fragments$plot_trace() trace::fragments$print()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"fragments_trace object — fragments_trace","text":"fragments_trace$new() fragments_trace$plot_ladder() fragments_trace$plot_data_channels() fragments_trace$clone()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"fragments_trace object — fragments_trace","text":"Create new fragments_trace.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_trace object — fragments_trace","text":"","code":"fragments_trace$new(unique_id, fsa_file)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_trace object — fragments_trace","text":"unique_id usually file name fsa_file output seqinr::read.abif()","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"fragments_trace object — fragments_trace","text":"new fragments_trace object.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"method-plot-ladder-","dir":"Reference","previous_headings":"","what":"Method plot_ladder()","title":"fragments_trace object — fragments_trace","text":"plot ladder data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_trace object — fragments_trace","text":"","code":"fragments_trace$plot_ladder(xlim = NULL, ylim = NULL, plot_title = NULL)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_trace object — fragments_trace","text":"xlim numeric vector length two specifying x axis limits ylim numeric vector length two specifying y axis limits plot_title character string setting plot title. Defaults unique id object","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"fragments_trace object — fragments_trace","text":"base R plot","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"method-plot-data-channels-","dir":"Reference","previous_headings":"","what":"Method plot_data_channels()","title":"fragments_trace object — fragments_trace","text":"plot raw data channels fsa file. identifies every channel \"DATA\" name.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_trace object — fragments_trace","text":"","code":"fragments_trace$plot_data_channels()"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"fragments_trace object — fragments_trace","text":"base R plot","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"fragments_trace object — fragments_trace","text":"objects class cloneable method.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"fragments_trace object — fragments_trace","text":"","code":"fragments_trace$clone(deep = FALSE)"},{"path":"https://zachariahmclean.github.io/trace/reference/fragments_trace.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"fragments_trace object — fragments_trace","text":"deep Whether make deep clone.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/generate_trace_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","title":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","text":"Generate Quarto file instability pipeline preset","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/generate_trace_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","text":"","code":"generate_trace_template(   file_name = NULL,   batch_correction = TRUE,   samples_grouped = TRUE )"},{"path":"https://zachariahmclean.github.io/trace/reference/generate_trace_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","text":"file_name Name file create batch_correction Indicates functionality correcting repeat size using size standards across batches included pipeline. See add_metadata & call_repeats info. samples_grouped Indicates functionality grouping samples metrics calculations included pipeline. See add_metadata & assign_index_peaks info.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/generate_trace_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","text":"Quarto template file repeat instability analysis","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/generate_trace_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Quarto file that has the instability pipeline preset — generate_trace_template","text":"","code":"if (interactive()) {   generate_instability_template(\"test\") }"},{"path":"https://zachariahmclean.github.io/trace/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata — metadata","title":"metadata — metadata","text":"dataframe containing metadata information example data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata — metadata","text":"","code":"metadata"},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/metadata.html","id":"metadata","dir":"Reference","previous_headings":"","what":"metadata","title":"metadata — metadata","text":"genemapper output dataframe","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"metadata — metadata","text":"https://www.nature.com/articles/s41467-024-47485-0","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"function converts peak table data frame list fragments_repeats objects.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"","code":"peak_table_to_fragments(   df,   data_format = NULL,   peak_size_col = NULL,   peak_height_col = NULL,   unique_id = NULL,   dye_col = NULL,   dye_channel = NULL,   allele_col = NULL,   min_size_bp = 200,   max_size_bp = 1000 )"},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"df data frame containing peak data. data_format format data frame (example, genemapper peak table). Choose : genemapper5, generic. peak_size_col character string specifying column name giving peak size. peak_height_col character string specifying column name giving peak height. unique_id character string specifying column name giving unique sample id (often file name). dye_col Genemapper specific. character string specifying column name indicating dye channel. dye_channel Genemapper specific. character string indicating channel extract data . example, 6-FAM often \"B\". allele_col Genemapper specific. character string specifying column name indicating called alleles. often used peaks called genemapper. min_size_bp Numeric value indicating minimum size peak table import. max_size_bp Numeric value indicating maximum size peak table import.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"list fragments_repeats objects.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"function takes peak table data frame (eg. Genemapper output) converts list fragment objects. function supports different data formats allows specifying column names various attributes.","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/peak_table_to_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Peak Table to Fragments_repeats class — peak_table_to_fragments","text":"","code":"gm_raw <- trace::example_data  test_fragments <- peak_table_to_fragments(   gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 400 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot correction samples — plot_batch_correction_samples","title":"Plot correction samples — plot_batch_correction_samples","text":"Plot overlapping traces batch control samples","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot correction samples — plot_batch_correction_samples","text":"","code":"plot_batch_correction_samples(fragments_list, selected_sample, xlim = NULL)"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot correction samples — plot_batch_correction_samples","text":"fragments_list list fragments_repeats objects containing fragment data. must trace information. selected_sample character vector batch_sample_id subset samples plot. alternatively supply number select batch sample position alphabetical order. xlim x limits plot. numeric vector length two.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot correction samples — plot_batch_correction_samples","text":"plot batch corrected samples","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot correction samples — plot_batch_correction_samples","text":"plot raw signal bp size repeats batch correction samples. plotting traces repeat correction, expect samples closely overlapping due run--run variation. repeat correction, traces basically overlapping. plots made using base R plotting. Sometimes fail render viewing panes IDEs (eg get error 'Error plot.new(): figure margins large)'. happens, try saving plot pdf using traditional approaches (see grDevices::pdf).","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/plot_batch_correction_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot correction samples — plot_batch_correction_samples","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[91:94], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  fragments_list <- find_fragments(fsa_list, min_bp_size = 300)  test_alleles <- find_alleles(   fragments_list  )  add_metadata(   fragments_list,   metadata ) #> Warning: The following unique ids in the metadata file do not have a corresponding sample: 20230413_A01.fsa, 20230413_A02.fsa, 20230413_A03.fsa, 20230413_A04.fsa, 20230413_A05.fsa, 20230413_A06.fsa, 20230413_A07.fsa, 20230413_A08.fsa, 20230413_A09.fsa, 20230413_A10.fsa, 20230413_A11.fsa, 20230413_A12.fsa, 20230413_B01.fsa, 20230413_B02.fsa, 20230413_B03.fsa, 20230413_B04.fsa, 20230413_B05.fsa, 20230413_B06.fsa, 20230413_B07.fsa, 20230413_B08.fsa, 20230413_B09.fsa, 20230413_B10.fsa, 20230413_B11.fsa, 20230413_B12.fsa, 20230413_C01.fsa, 20230413_C02.fsa, 20230413_C03.fsa, 20230413_C04.fsa, 20230413_C05.fsa, 20230413_C06.fsa, 20230413_C07.fsa, 20230413_C08.fsa, 20230413_C09.fsa, 20230413_C10.fsa, 20230413_C11.fsa, 20230413_C12.fsa, 20230413_D01.fsa, 20230413_D02.fsa, 20230413_D03.fsa, 20230413_D04.fsa, 20230413_D05.fsa, 20230413_D06.fsa, 20230413_D07.fsa, 20230413_D08.fsa, 20230413_D09.fsa, 20230413_D10.fsa, 20230413_D11.fsa, 20230413_D12.fsa, 20230413_E01.fsa, 20230413_E02.fsa, 20230413_E03.fsa, 20230413_E04.fsa, 20230413_E05.fsa, 20230413_E06.fsa, 20230413_E07.fsa, 20230413_E08.fsa, 20230413_E09.fsa, 20230413_E10.fsa, 20230413_E11.fsa, 20230413_E12.fsa, 20230413_F01.fsa, 20230413_F02.fsa, 20230413_F03.fsa, 20230413_F04.fsa, 20230413_F05.fsa, 20230413_F06.fsa, 20230413_F07.fsa, 20230413_F08.fsa, 20230413_F09.fsa, 20230413_F10.fsa, 20230413_F11.fsa, 20230413_F12.fsa, 20230413_G01.fsa, 20230413_G02.fsa, 20230413_G03.fsa, 20230413_G04.fsa, 20230413_G05.fsa, 20230413_G06.fsa, 20230413_G07.fsa, 20230413_G08.fsa, 20230413_G09.fsa, 20230413_G10.fsa, 20230413_G11.fsa, 20230413_G12.fsa, 20230413_H01.fsa, 20230413_H02.fsa, 20230413_H03.fsa, 20230413_H04.fsa, 20230413_H05.fsa, 20230413_H06.fsa   call_repeats(   fragments_list = fragments_list,   repeat_calling_algorithm = \"simple\",   assay_size_without_repeat = 87,   repeat_size = 3,   batch_correction = TRUE )  # traces of bp size shows traces at different sizes plot_batch_correction_samples(   fragments_list,   selected_sample = \"S-21-212\", xlim = c(100, 120) )"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_data_channels — plot_data_channels","title":"plot_data_channels — plot_data_channels","text":"Plot raw data fsa file","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_data_channels — plot_data_channels","text":"","code":"plot_data_channels(fragments_list, sample_subset = NULL, n_facet_col = 1)"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_data_channels — plot_data_channels","text":"fragments_list list fragments_trace objects. sample_subset character vector unique ids subset samples plot n_facet_col numeric value indicating number columns faceting plot.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_data_channels — plot_data_channels","text":"plot raw data channels","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_data_channels — plot_data_channels","text":"plot raw data channels fsa file. plots made using base R plotting. Sometimes fail render viewing panes IDEs (eg get error 'Error plot.new(): figure margins large)'. happens, try saving plot pdf using traditional approaches (see grDevices::pdf). get render IDE pane, trying matching n_facet_col number samples attempting plot, using sample_subset limit single sample.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_data_channels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_data_channels — plot_data_channels","text":"","code":"plot_data_channels(cell_line_fsa_list[1])"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Peak Data — plot_fragments","title":"Plot Peak Data — plot_fragments","text":"Plots peak data list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Peak Data — plot_fragments","text":"","code":"plot_fragments(   fragments_list,   n_facet_col = 1,   sample_subset = NULL,   xlim = NULL,   ylim = NULL )"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Peak Data — plot_fragments","text":"fragments_list list fragments_repeats objects containing fragment data. n_facet_col numeric value indicating number columns faceting plot. sample_subset character vector unique ids subset samples plot xlim x limits plot. numeric vector length two. ylim y limits plot. numeric vector length two.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Peak Data — plot_fragments","text":"plot object displaying peak data.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Peak Data — plot_fragments","text":"","code":"gm_raw <- trace::example_data  fragments_list <- peak_table_to_fragments(gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 300 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  find_alleles(   fragments_list )  plot_fragments(fragments_list[1])"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_ladders.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ladder — plot_ladders","title":"Plot ladder — plot_ladders","text":"Plot ladder signal","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_ladders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ladder — plot_ladders","text":"","code":"plot_ladders(   fragments_trace_list,   n_facet_col = 1,   sample_subset = NULL,   xlim = NULL,   ylim = NULL )"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_ladders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ladder — plot_ladders","text":"fragments_trace_list list fragments_trace objects containing fragment data. n_facet_col numeric value indicating number columns faceting plot. sample_subset character vector unique ids subset samples plot xlim x limits plot. numeric vector length two. ylim y limits plot. numeric vector length two.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_ladders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ladder — plot_ladders","text":"plot ladders","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_ladders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ladder — plot_ladders","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  # Manually inspect the ladders plot_ladders(fsa_list[1])"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample traces — plot_traces","title":"Plot sample traces — plot_traces","text":"Plot raw trace data","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample traces — plot_traces","text":"","code":"plot_traces(   fragments_list,   show_peaks = TRUE,   n_facet_col = 1,   sample_subset = NULL,   xlim = NULL,   ylim = NULL,   x_axis = NULL,   height_color_threshold = 0.05 )"},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample traces — plot_traces","text":"fragments_list list fragments_repeats fragments_trace objects containing fragment data. show_peaks peak data available, TRUE plot peaks top trace dots. n_facet_col numeric value indicating number columns faceting plot. sample_subset character vector unique ids subset samples plot xlim x limits plot. numeric vector length two. ylim y limits plot. numeric vector length two. x_axis character indicating plotted x-axis, chose size repeats. neither selected, assumption made based repeats called. height_color_threshold Threshold relative tallest peak color dots (blue , purple ).","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample traces — plot_traces","text":"plot traces fragments object","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot sample traces — plot_traces","text":"plot raw signal bp size. Red vertical line indicates scan flagged -scale. channel, use best judgment determine sample ladder channel. peaks called, green tallest peak, blue peaks height threshold (default 5%), purple height threshold. force_whole_repeat_units used within call_repeats(), called repeat connected peak trace horizontal dashed line. index peak plotted vertical dashed line set using assign_index_peaks().","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/plot_traces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot sample traces — plot_traces","text":"","code":"fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())  find_ladders(fsa_list, show_progress_bar = FALSE)  fragments_list <- find_fragments(fsa_list,   min_bp_size = 300 )  find_alleles(   fragments_list )  # Simple conversion from bp size to repeat size call_repeats(   fragments_list )  plot_traces(fragments_list, xlim = c(105, 150))"},{"path":"https://zachariahmclean.github.io/trace/reference/read_fsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Read fsa file — read_fsa","title":"Read fsa file — read_fsa","text":"function just wrapper seqinr::read.abif","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/read_fsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read fsa file — read_fsa","text":"","code":"read_fsa(files)"},{"path":"https://zachariahmclean.github.io/trace/reference/read_fsa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read fsa file — read_fsa","text":"files chr vector fsa file names.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/read_fsa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read fsa file — read_fsa","text":"list fragments_trace objects","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/read_fsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read fsa file — read_fsa","text":"","code":"# files <- list.files(\"example_directory/\", full.names = TRUE, pattern = \".fsa\") # read_fsa(files)"},{"path":"https://zachariahmclean.github.io/trace/reference/remove_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Samples from List — remove_fragments","title":"Remove Samples from List — remove_fragments","text":"convenient function remove specific samples list fragments.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/remove_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Samples from List — remove_fragments","text":"","code":"remove_fragments(fragments_list, samples_to_remove)"},{"path":"https://zachariahmclean.github.io/trace/reference/remove_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Samples from List — remove_fragments","text":"fragments_list list fragments_repeats objects containing fragment data. samples_to_remove character vector containing unique IDs samples removed.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/remove_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Samples from List — remove_fragments","text":"modified list fragments specified samples removed.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/remove_fragments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Samples from List — remove_fragments","text":"","code":"gm_raw <- trace::example_data metadata <- trace::metadata  test_fragments <- peak_table_to_fragments(   gm_raw,   data_format = \"genemapper5\",   dye_channel = \"B\",   min_size_bp = 300 ) #> Warning: Size filtering removed all rows for 20230413_D11.fsa  all_fragment_names <- names(test_fragments)  # pull out unique ids of samples to remove samples_to_remove <- all_fragment_names[c(1, 5, 10)]  samples_removed <- remove_fragments(test_fragments, samples_to_remove)"},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"function converts repeat table data frame list fragments_repeats. class.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"","code":"repeat_table_to_repeats(df, unique_id, repeat_col, frequency_col)"},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"df data frame containing repeat data. unique_id character string indicating column name unique identifiers. repeat_col character string indicating column name repeats. frequency_col character string indicating column name repeat frequencies.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"list fragments_repeats objects.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"function takes repeat table data frame converts list repeats fragments. function allows specifying column names repeats, frequencies, unique identifiers.","code":""},{"path":"https://zachariahmclean.github.io/trace/reference/repeat_table_to_repeats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Repeat Table to Repeats Fragments — repeat_table_to_repeats","text":"","code":"repeat_table <- trace::example_data_repeat_table test_fragments <- repeat_table_to_repeats(   repeat_table,   repeat_col = \"repeats\",   frequency_col = \"height\",   unique_id = \"unique_id\" )"},{"path":"https://zachariahmclean.github.io/trace/reference/trace-package.html","id":null,"dir":"Reference","previous_headings":"","what":"trace: Tandem Repeat Analysis by Capillary Electrophoresis — trace-package","title":"trace: Tandem Repeat Analysis by Capillary Electrophoresis — trace-package","text":"goal package provide pipeline short tandem repeat instability analysis fragment analysis data. package takes inputs fsa files peak tables (eg Genemapper5 software output), user supplied metadata data-frame. package identifies ladders, calls peaks, identifies modal peaks, calls repeats, calculates repeat instability metrics (ie expansion index average repeat gain).","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/reference/trace-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"trace: Tandem Repeat Analysis by Capillary Electrophoresis — trace-package","text":"Maintainer: Zachariah McLean zachariah.louis.mclean@gmail.com (ORCID) [copyright holder] Authors: Kevin Correia","code":""},{"path":[]},{"path":"https://zachariahmclean.github.io/trace/news/index.html","id":"trace-010","dir":"Changelog","previous_headings":"","what":"trace 0.1.0","title":"trace 0.1.0","text":"Along new name, major update previous version package. updates changes relative main branch ‘instability’ github branch. nature changes focusing tool instability metrics calculation rather accurate genotyping repeat length.","code":""},{"path":"https://zachariahmclean.github.io/trace/news/index.html","id":"breaking-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"trace 0.1.0","text":"main functions pipeline modify place rather return new object efficient use memory. applies following functions: find_ladders(), add_metadata(), find_alleles(), call_repeats(), assign_index_peaks(). Removed repeat calling using size standard known repeat length argument repeat_length_correction removed call_repeats(). functionality transferred newer much simplier approach batch correction (see documentation call_repeats(). associated plotting function plot_size_standard_model() also removed. Metadata categories renamed Renamed clarity make clearer functionality ’s associated plate_id -> batch_id, group_id -> metrics_group_id, mentioned size_standard & size_standard_repeat_length removed Now possible find one allele Removed number_of_peaks_to_return find_alleles(). Allele index peak information can longer directly interacted class Setters (fragment_repeats$set_allele_peak() & fragment_repeats$set_index_peak()) getters (fragment_repeats$get_allele_peak() & fragment_repeats$get_index_peak()) introduced users don’t accidentally break things chose directly interact objects. Removed backwards compatibility index assignment calculate_instability_metrics() grouped index_override_dataframe parameters removed calculate_instability_metrics(). Renamed spike_location parameter find_ladders() ladder_start_scan Removed fix_ladders_auto() function function generate_instability_template() renamed generate_trace_template() fragment_trace class now instantiated read_fsa() function rather find_ladders()","code":""},{"path":"https://zachariahmclean.github.io/trace/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"trace 0.1.0","text":"Batch correction Correct systematic batch effects occur across fragment analysis runs using common samples across runs without know repeat length. New associated function plot_batch_correction_samples() help visualize batch correction. See documentation call_repeats() info. New function extract_ladder_summary() get summary ladder fits samples. New function plot_data_channels() help identify channels containing ladder raw data.","code":""},{"path":"https://zachariahmclean.github.io/trace/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"trace 0.1.0","text":"samples metrics_group_id metrics_baseline_control calculate_instability_metrics() function still run samples missing values.","code":""}]
