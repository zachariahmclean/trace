% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_ladders.R
\name{find_ladders}
\alias{find_ladders}
\title{Ladder and bp sizing}
\usage{
find_ladders(fragments_list, config, ...)
}
\arguments{
\item{fragments_list}{list from 'read_fsa' function}

\item{config}{A trace_config object generated using \code{\link[=load_config]{load_config()}}.}

\item{...}{additional parameters from any of the functions in the pipeline detailed below may be passed to this function. This overwrites values in the \code{config_file}. These parameters include:
\itemize{
\item \code{ladder_channel}: string, which channel in the fsa file contains the ladder signal. Default: \code{"DATA.105"}.
\item \code{signal_channel}: string, which channel in the fsa file contains the data signal. Default: \code{"DATA.1"}.
\item \code{ladder_sizes}: numeric vector, bp sizes of ladder used in fragment analysis. Default: \code{c(50, 75, 100, 139, 150, 160, 200, 250, 300, 340, 350, 400, 450, 490, 500)}.
\item \code{ladder_start_scan}: numeric, indicate the scan number to start looking for ladder peaks. Usually this can be automatically found (when set to NULL). Default: \code{NULL}.
\item \code{minimum_peak_signal}: numeric, minimum signal of peak from smoothed signal. Default: \code{NULL}.
\item \code{scan_subset}: numeric vector (length 2), filter the ladder and data signal between the selected scans (e.g., \code{scan_subset = c(3000, 5000)}). Default: \code{NULL}.
\item \code{ladder_selection_window}: numeric, in the ladder assigning algorithm, the we iterate through the scans in blocks and test their linear fit (We can assume that the ladder is linear over a short distance). This value defines how large that block of peaks should be. Default: \code{5}.
\item \code{max_combinations}: numeric, what is the maximum number of ladder combinations that should be tested. Default: \code{2500000}.
\item \code{warning_rsq_threshold}: numeric, the value for which this function will warn you when parts of the ladder have R-squared values below the specified threshold. Default: \code{0.998}.
\item \code{show_progress_bar}: logical, show progress bar. Default: \code{TRUE}.
}}
}
\value{
This function modifies list of fragments objects in place with the ladder assigned and base pair calculated.
}
\description{
Find the ladder peaks in and use that to call bp size
}
\details{
This function takes a list of fragments files (the output from read_fsa) and identifies
the ladders in the ladder channel which is used to call the bp size. The output
is a list of fragments.

In this package, base pair (bp) sizes are assigned using a generalized additive model (GAM) with cubic regression splines. The model is fit to known ladder fragment sizes and their corresponding scan positions, capturing the relationship between scan number and bp size. Once trained, the model predicts bp sizes for all scans by interpolating between the known ladder points. This approach provides a flexible and accurate assignment of bp sizes, accommodating the slightly non-linear relationship.

Use \code{\link[=plot_data_channels]{plot_data_channels()}} to plot the raw data on the fsa file to identify which channel the ladder and data are in.

The ladder peaks are assigned from largest to smallest. I would recommend excluding
size standard peaks less than 50 bp (eg size standard 35 bp).

Each ladder should be manually inspected to make sure that is has been correctly assigned.
}
\examples{

fsa_list <- lapply(cell_line_fsa_list[1], function(x) x$clone())
config <- load_config()

find_ladders(fsa_list, config, show_progress_bar = FALSE)

# Manually inspect the ladders
plot_ladders(fsa_list[1])

}
\seealso{
\code{\link[=plot_data_channels]{plot_data_channels()}} to plot the raw data in all channels. \code{\link[=plot_ladders]{plot_ladders()}} to plot the assigned ladder
peaks onto the raw ladder signal. \code{\link[=fix_ladders_interactive]{fix_ladders_interactive()}} to fix ladders with
incorrectly assigned peaks.
}
